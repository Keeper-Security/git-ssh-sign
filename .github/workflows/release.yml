name: release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  release:
    env:
      ARCHES: amd64 arm64
      CMD: git-ssh-sign
      OSES: darwin linux windows
    environment: release
    runs-on: macos-latest
    steps:
      - uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.CODESIGN_CERT_P12 }}
          p12-password: ${{ secrets.CODESIGN_CERT_P12_PWD }}

      - uses: crazy-max/ghaction-import-gpg@v5
        with:
          fingerprint: "${{ secrets.GPG_FINGERPRINT }}"
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"

      - name: Build Linux, MacOS and Windows binaries
        run: |
          for arch in $ARCHES; do
            for os in $OSES; do
              bin="${CMD}-${{ github.ref_name }}_${os}_${arch}";
              test "${os}" = 'windows' && bin="${bin}.exe";
              GOOS=${os} GOARCH=${arch} go build -v -o "${bin}" ./cmd/ssh-sign;
            done;
          done;

      - name: Sign MacOS binaries
        run: |
          for arch in $ARCHES; do
            bin="${CMD}-${{ github.ref_name }}_darwin_${arch}";
            codesign --sign 234QNB7GCA --options runtime --timestamp --deep "${bin}";
            zip="${bin}.zip";
            zip "${zip}" "${bin}";
            rm -f "${bin}";
            xcrun notarytool submit "${zip}" \
              --apple-id '@keychain:AC_USERNAME' --password '@keychain:AC_PASSWORD' \
              --team-id 234QNB7GCA --wait;
          done

      - name: Create checksums
        run: |
          name="${CMD}-${{ github.ref_name }}";
          sums="${name}_checksums.txt";
          shasum -a 256 ${name}_* >| $sums;
          gpg --batch --yes --detach-sign --armor \
            --local-user "${{ secrets.GPG_FINGERPRINT }}" \
            --passphrase "${{ secrets.GPG_PASSPHRASE }}" \
            --output "${sums}.asc" $sums

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ github.ref_name }}" \
            --title "${{ github.ref_name }}" \
            --repo "${{ github.repository }}"

      - name: Upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ github.ref_name }}" \
            --repo "${{ github.repository }}" \
            "${CMD}-${{ github.ref_name }}"_*
